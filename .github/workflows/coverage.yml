name: Test Coverage Report

on:
  push:
    branches: [ main, develop, master ]
  workflow_dispatch:

jobs:
  coverage-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests and generate coverage
      run: |
        mvn clean test jacoco:report
        mvn jacoco:report-aggregate
        
    - name: Generate coverage badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: target/site/jacoco/jacoco.csv
        badges-directory: .github/badges
        generate-coverage-badge: true
        
    - name: Log coverage percentages
      run: |
        echo "Coverage Percentages:"
        awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print "Instructions covered: " covered "/" instructions " (" (100*covered/instructions) "%)" }' target/site/jacoco/jacoco.csv
        
    - name: Create detailed test report
      run: |
        echo "# Test Coverage Report" > test-coverage-report.md
        echo "" >> test-coverage-report.md
        echo "**Generated:** $(date)" >> test-coverage-report.md
        echo "" >> test-coverage-report.md
        echo "## Test Results Summary" >> test-coverage-report.md
        echo "" >> test-coverage-report.md
        
        # Extract test counts from surefire reports
        TESTS=$(find target/surefire-reports -name "*.xml" -exec grep -h "tests=" {} \; | sed 's/.*tests="\([0-9]*\)".*/\1/' | paste -sd+ | bc)
        FAILURES=$(find target/surefire-reports -name "*.xml" -exec grep -h "failures=" {} \; | sed 's/.*failures="\([0-9]*\)".*/\1/' | paste -sd+ | bc)
        ERRORS=$(find target/surefire-reports -name "*.xml" -exec grep -h "errors=" {} \; | sed 's/.*errors="\([0-9]*\)".*/\1/' | paste -sd+ | bc)
        SKIPPED=$(find target/surefire-reports -name "*.xml" -exec grep -h "skipped=" {} \; | sed 's/.*skipped="\([0-9]*\)".*/\1/' | paste -sd+ | bc)
        
        echo "- **Total Tests:** $TESTS" >> test-coverage-report.md
        echo "- **Passed:** $((TESTS - FAILURES - ERRORS - SKIPPED))" >> test-coverage-report.md
        echo "- **Failed:** $FAILURES" >> test-coverage-report.md
        echo "- **Errors:** $ERRORS" >> test-coverage-report.md
        echo "- **Skipped:** $SKIPPED" >> test-coverage-report.md
        echo "" >> test-coverage-report.md
        
        # Add coverage information
        echo "## Coverage Summary" >> test-coverage-report.md
        echo "" >> test-coverage-report.md
        echo "| Metric | Coverage |" >> test-coverage-report.md
        echo "|--------|----------|" >> test-coverage-report.md
        
        # Parse JaCoCo CSV for coverage data
        tail -n +2 target/site/jacoco/jacoco.csv | while IFS=, read -r GROUP PACKAGE CLASS INSTRUCTION_MISSED INSTRUCTION_COVERED BRANCH_MISSED BRANCH_COVERED LINE_MISSED LINE_COVERED COMPLEXITY_MISSED COMPLEXITY_COVERED METHOD_MISSED METHOD_COVERED
        do
          if [ "$CLASS" = "" ]; then
            # This is a summary line
            INSTRUCTION_TOTAL=$((INSTRUCTION_MISSED + INSTRUCTION_COVERED))
            BRANCH_TOTAL=$((BRANCH_MISSED + BRANCH_COVERED))
            LINE_TOTAL=$((LINE_MISSED + LINE_COVERED))
            
            if [ $INSTRUCTION_TOTAL -gt 0 ]; then
              INSTRUCTION_PCT=$(echo "scale=1; $INSTRUCTION_COVERED * 100 / $INSTRUCTION_TOTAL" | bc)
              echo "| Instructions | ${INSTRUCTION_PCT}% (${INSTRUCTION_COVERED}/${INSTRUCTION_TOTAL}) |" >> test-coverage-report.md
            fi
            
            if [ $BRANCH_TOTAL -gt 0 ]; then
              BRANCH_PCT=$(echo "scale=1; $BRANCH_COVERED * 100 / $BRANCH_TOTAL" | bc)
              echo "| Branches | ${BRANCH_PCT}% (${BRANCH_COVERED}/${BRANCH_TOTAL}) |" >> test-coverage-report.md
            fi
            
            if [ $LINE_TOTAL -gt 0 ]; then
              LINE_PCT=$(echo "scale=1; $LINE_COVERED * 100 / $LINE_TOTAL" | bc)
              echo "| Lines | ${LINE_PCT}% (${LINE_COVERED}/${LINE_TOTAL}) |" >> test-coverage-report.md
            fi
            break
          fi
        done
        
        echo "" >> test-coverage-report.md
        echo "## Detailed Reports" >> test-coverage-report.md
        echo "" >> test-coverage-report.md
        echo "- [Full JaCoCo Report](target/site/jacoco/index.html)" >> test-coverage-report.md
        echo "- [Test Results](target/surefire-reports/)" >> test-coverage-report.md
        
    - name: Upload detailed report
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage-report
        path: |
          test-coverage-report.md
          target/site/jacoco/
          target/surefire-reports/
          
    - name: Commit coverage badges
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .github/badges/
        git diff --staged --quiet || git commit -m "Update coverage badges"
        git push
